subtitle = "NCAA Data, 2021",
y="Count",
x="Race/Gender")
Upton_Druid_Heights <- (read.csv("Upton_Druid_Heights_Data - Sheet1.csv"))
Upton_Druid_Heights %>%
group_by(X2020_race) %>%
arrange(desc(count)) %>%
ggplot(aes(x=X2020_race, y=count, weight=count, fill = count))+
geom_col() +
labs(title = "Upton/Druid Heights Racial Breakdown in 2020",
subtitle = "Baltimore Data, 2020",
y="Count",
x="Race")
poorest<-Balt_income %>%
inner_join(Balt_race, by=c("GEOID"="geoid")) %>%
slice_min(x2020, n=1)
View(pct_black)
pct_black <-Balt_race %>%
inner_join(Balt_income, by=c("GEOID"="geoid")) %>%
select(geoid, x2010_total, x2010_black, x2020_black, x2020_total) %>%
mutate(percent_x2020_black = ((x2020_black/x2020_total)*100),
percent_x2010_black = ((x2010_black/x2010_total)*100)) %>%
slice_max(percent_x2020_black, n=3)
pct_black <-Balt_race %>%
inner_join(Balt_income, by=c("geoid"="GEOID")) %>%
select(geoid, x2010_total, x2010_black, x2020_black, x2020_total) %>%
mutate(percent_x2020_black = ((x2020_black/x2020_total)*100),
percent_x2010_black = ((x2010_black/x2010_total)*100)) %>%
slice_max(percent_x2020_black, n=3)
pct_white <-Balt_race %>%
inner_join(Balt_income, by=c("geoid"="GEOID")) %>%
select(geoid, x2010_total, x2010_white, x2020_white, x2020_total) %>%
mutate(percent_x2020_white = ((x2020_white/x2020_total)*100),
percent_x2010_white = ((x2010_white/x2010_total)*100)) %>%
slice_max(percent_x2020_white, n=3)
View(pct_black)
pct_black <-Balt_race %>%
inner_join(Balt_income, by=c("geoid"="GEOID")) %>%
select(geoid, x2010_total, x2010_black, x2020_black, x2020_total, Neighborhood) %>%
mutate(percent_x2020_black = ((x2020_black/x2020_total)*100),
percent_x2010_black = ((x2010_black/x2010_total)*100)) %>%
slice_max(percent_x2020_black, n=3)
pct_white <-Balt_race %>%
inner_join(Balt_income, by=c("geoid"="GEOID")) %>%
select(geoid, x2010_total, x2010_white, x2020_white, x2020_total) %>%
mutate(percent_x2020_white = ((x2020_white/x2020_total)*100),
percent_x2010_white = ((x2010_white/x2010_total)*100)) %>%
slice_max(percent_x2020_white, n=3)
View(pct_black)
pct_black <-Balt_race %>%
inner_join(Balt_income, by=c("geoid"="GEOID")) %>%
select(geoid, x2010_total, x2010_black, x2020_black, x2020_total, Neighborhood) %>%
mutate(percent_x2020_black = ((x2020_black/x2020_total)*100),
percent_x2010_black = ((x2010_black/x2010_total)*100)) %>%
slice_max(percent_x2020_black, n=3)
pct_white <-Balt_race %>%
inner_join(Balt_income, by=c("geoid"="GEOID")) %>%
select(geoid, x2010_total, x2010_white, x2020_white, x2020_total, Neighborhood) %>%
mutate(percent_x2020_white = ((x2020_white/x2020_total)*100),
percent_x2010_white = ((x2010_white/x2010_total)*100)) %>%
slice_max(percent_x2020_white, n=3)
View(Balt_income)
pct_black <-Balt_race %>%
inner_join(Balt_income, by=c("geoid"="GEOID")) %>%
select(geoid, x2010_total, x2010_black, x2020_black, x2020_total, Neighborhood, x2010, x2016, x2020) %>%
mutate(percent_x2020_black = ((x2020_black/x2020_total)*100),
percent_x2010_black = ((x2010_black/x2010_total)*100)) %>%
slice_max(percent_x2020_black, n=3)
pct_white <-Balt_race %>%
inner_join(Balt_income, by=c("geoid"="GEOID")) %>%
select(geoid, x2010_total, x2010_white, x2020_white, x2020_total, Neighborhood) %>%
mutate(percent_x2020_white = ((x2020_white/x2020_total)*100),
percent_x2010_white = ((x2010_white/x2010_total)*100)) %>%
slice_max(percent_x2020_white, n=3)
View(pct_black)
pct_black <-Balt_race %>%
inner_join(Balt_income, by=c("geoid"="GEOID")) %>%
select(geoid, x2010_total, x2010_black, x2020_black, x2020_total, Neighborhood, x2010, x2016, x2020) %>%
mutate(percent_x2020_black = ((x2020_black/x2020_total)*100),
percent_x2010_black = ((x2010_black/x2010_total)*100)) %>%
slice_max(percent_x2020_black, n=3)
pct_white <-Balt_race %>%
inner_join(Balt_income, by=c("geoid"="GEOID")) %>%
select(geoid, x2010_total, x2010_white, x2020_white, x2020_total, Neighborhood, x2010, x2016, x2020) %>%
mutate(percent_x2020_white = ((x2020_white/x2020_total)*100),
percent_x2010_white = ((x2010_white/x2010_total)*100)) %>%
slice_max(percent_x2020_white, n=3)
ads2 <- read_csv("Sports_Race_ADs.csv", skip =1)
ads2 <- clean_names(ads2)
ggplot(ads2, aes(x=year))+
geom_line(aes(y=male_white), color = "blue") +
geom_line(aes(y=male_black), color = "orange") +
geom_line(aes(y=male_other), color = "purple") +
geom_line(aes(y=female_white), color = "yellow") +
geom_line(aes(y=female_black), color = "red") +
geom_line(aes(y=female_other), color = "pink") +
labs(
title = "NCAA Athletic Directors by Race and Sex from 2015-2021",
x = "Year",
Y = "Count by Race and Sex",
caption = "Source: NCAA")
View(ads2)
View(pct_white)
Pct_White_Top_three <- (read.csv("Pct_White_Data - Sheet1.csv"))
pct_white %>%
ggplot(pct_white, aes(x=year))+
geom_line(aes(y=Fells Point), color = "blue") +
Pct_White_Top_three <- (read.csv("Pct_White_Data - Sheet1.csv"))
pct_white %>%
ggplot(pct_white, aes(x=year))+
geom_line(aes(y="Fells Point"), color = "blue") +
geom_line(aes(y="South Baltimore"), color = "orange") +
geom_line(aes(y="Medfield/Hampden/Woodberry/Remington"), color = "purple")
Pct_White_Top_three <- (read.csv("Pct_White_Data - Sheet1.csv", skip = 1))
pct_white %>%
ggplot(pct_white, aes(x=year))+
geom_line(aes(y="Fells Point"), color = "blue") +
geom_line(aes(y="South Baltimore"), color = "orange") +
geom_line(aes(y="Medfield/Hampden/Woodberry/Remington"), color = "purple")
Pct_White_Top_three <- (read.csv("Pct_White_Data - Sheet1.csv", skip = 1))
ggplot(Pct_White_Top_three, aes(x=year))+
geom_line(aes(y="Fells Point"), color = "blue") +
geom_line(aes(y="South Baltimore"), color = "orange") +
geom_line(aes(y="Medfield/Hampden/Woodberry/Remington"), color = "purple")
Pct_White_Top_three <- (read.csv("Pct_White_Data - Sheet1.csv", skip = 1))
ggplot(Pct_White_Top_three, aes(x=year))+
geom_line(aes(y="Fells Point"), color = "blue") +
geom_line(aes(y="South Baltimore"), color = "orange") +
geom_line(aes(y="Medfield/Hampden/Woodberry/Remington"), color = "purple") +
labs(
title = "NCAA Athletic Directors by Race and Sex from 2015-2021",
x = "Year",
Y = "Count by Race and Sex",
caption = "Source: NCAA")
Pct_White_Top_three <- (read.csv("Pct_White_Data - Sheet1.csv", skip = 1))
ggplot(Pct_White_Top_three, aes(x=year))+
geom_line(aes(y=Fells Point), color = "blue") +
Pct_White_Top_three <- (read.csv("Pct_White_Data - Sheet1.csv", skip = 1))
ggplot(Pct_White_Top_three, aes(x=year))+
geom_line(aes("y=Fells Point"), color = "blue") +
geom_line(aes("y=South Baltimore"), color = "orange") +
geom_line(aes("y=Medfield/Hampden/Woodberry/Remington"), color = "purple") +
labs(
title = "NCAA Athletic Directors by Race and Sex from 2015-2021",
x = "Year",
Y = "Count by Race and Sex",
caption = "Source: NCAA")
Pct_White_Top_three <- (read.csv("Pct_White_Data - Sheet1.csv", skip = 1))
ggplot(Pct_White_Top_three, aes(x=year))+
geom_line(aes("y=Fells Point"), color = "blue") +
geom_line(aes("y=South Baltimore"), color = "orange") +
geom_line(aes("y=Medfield/Hampden/Woodberry/Remington"), color = "purple") +
labs(
title = "NCAA Athletic Directors by Race and Sex from 2015-2021",
x = "Year",
Y = "Count by Race and Sex",
caption = "Source: NCAA")
View(Pct_White_Top_three)
Pct_White_Top_three <- (read.csv("Pct_White_Data - Sheet1.csv", skip = 1))
View(Pct_White_Top_three)
Pct_White_Top_three <- (read.csv("Pct_White_Data - Sheet1.csv"))
View(Pct_White_Top_three)
Pct_White_Top_three <- (read.csv("Pct_White_Data - Sheet1.csv"))
ggplot(Pct_White_Top_three, aes(x=year))+
geom_line(aes("y=Fells.Point"), color = "blue") +
geom_line(aes("y=South.Baltimore"), color = "orange") +
geom_line(aes("y=Medfield.Hampden.Woodberry.Remington"), color = "purple") +
labs(
title = "NCAA Athletic Directors by Race and Sex from 2015-2021",
x = "Year",
Y = "Count by Race and Sex",
caption = "Source: NCAA")
Pct_White_Top_three <- (read.csv("Pct_White_Data - Sheet1.csv"))
ggplot(Pct_White_Top_three, aes(x=year))+
geom_line(aes(y=Fells.Point), color = "blue") +
geom_line(aes(y=South.Baltimore), color = "orange") +
geom_line(aes(y=Medfield.Hampden.Woodberry.Remington), color = "purple") +
labs(
title = "NCAA Athletic Directors by Race and Sex from 2015-2021",
x = "Year",
Y = "Count by Race and Sex",
caption = "Source: NCAA")
Pct_White_Top_three <- (read.csv("Pct_White_Data - Sheet1.csv"))
ggplot(Pct_White_Top_three, aes(x=year))+
geom_line(aes(y=Fells.Point), color = "blue") +
geom_line(aes(y=South.Baltimore), color = "orange") +
geom_line(aes(y=Medfield.Hampden.Woodberry.Remington), color = "purple") +
labs(
title = "NCAA Athletic Directors by Race and Sex from 2015-2021",
x = "Year",
Y = "Count by Race and Sex",
caption = "Source: NCAA")
ggplot(Pct_White_Top_three, aes(x=year))+
ggplot(ads2, aes(x=year))+
geom_line(aes(y=male_white), color = "blue") +
ads2 <- read_csv("Sports_Race_ADs.csv", skip =1)
Pct_White_Top_three <- (read.csv("Pct_White_Data - Sheet1.csv"))
ggplot(Pct_White_Top_three, aes(x=year))+
geom_line(aes(y=Fells.Point), color = "blue") +
geom_line(aes(y=South.Baltimore), color = "orange") +
geom_line(aes(y=Medfield.Hampden.Woodberry.Remington), color = "purple") +
labs(
title = "NCAA Athletic Directors by Race and Sex from 2015-2021",
x = "Year",
Y = "Count by Race and Sex",
caption = "Source: NCAA")
Pct_White_Top_three <- (read.csv("Pct_White_Data - Sheet1.csv"))
ggplot(Pct_White_Top_three, aes(x=Year))+
geom_line(aes(y=Fells.Point), color = "blue") +
geom_line(aes(y=South.Baltimore), color = "orange") +
geom_line(aes(y=Medfield.Hampden.Woodberry.Remington), color = "purple") +
labs(
title = "NCAA Athletic Directors by Race and Sex from 2015-2021",
x = "Year",
Y = "Count by Race and Sex",
caption = "Source: NCAA")
ads2 <- read_csv("Sports_Race_ADs.csv", skip =1)
ads2 <- clean_names(ads2)
ggplot(ads2, aes(x=year))+
geom_line(aes(y=male_white), color = "blue") +
geom_line(aes(y=male_black), color = "orange") +
geom_line(aes(y=male_other), color = "purple") +
geom_line(aes(y=female_white), color = "yellow") +
geom_line(aes(y=female_black), color = "red") +
geom_line(aes(y=female_other), color = "pink") +
labs(
title = "NCAA Athletic Directors by Race and Sex from 2015-2021",
x = "Year",
Y = "Count by Race and Sex",
caption = "Source: NCAA")
Pct_White_Top_three <- (read.csv("Pct_White_Data - Sheet1.csv"))
ggplot(Pct_White_Top_three, aes(x=Year))+
geom_line(aes(y=Fells.Point), color = "blue") +
geom_line(aes(y=South.Baltimore), color = "orange") +
geom_line(aes(y=Medfield.Hampden.Woodberry.Remington), color = "purple") +
labs(
title = "NCAA Athletic Directors by Race and Sex from 2015-2021",
x = "Year",
Y = "Average Median Household Income",
caption = "Source: NCAA")
Pct_White_Top_three <- (read.csv("Pct_White_Data - Sheet1.csv"))
ggplot(Pct_White_Top_three, aes(x=Year))+
geom_line(aes(y=Fells.Point), color = "blue") +
geom_line(aes(y=South.Baltimore), color = "orange") +
geom_line(aes(y=Medfield.Hampden.Woodberry.Remington), color = "purple") +
labs(
title = "The Median Household Income of the Three Whitest Neighborhoods in 2020",
x = "Year",
Y = "Average Median Household Income",
caption = "Source: Baltimore Data")
Pct_Top_three <- (read.csv("Top_Three_Data - Sheet1.csv"))
View(Pct_Top_three)
Pct_Top_three <- (read.csv("Top_Three_Data - Sheet1.csv"))
ggplot(Pct_White_Top_three, aes(x=Year))+
geom_line(aes(y=Fells.Point), color = "blue") +
geom_line(aes(y=South.Baltimore), color = "orange") +
geom_line(aes(y=Medfield.Hampden.Woodberry.Remington), color = "purple") +
geom_line(aes(y=Sandtown.Winchester.Harlem.Park), color = "yellow") +
geom_line(aes(y=Edmondson.Village), color = "red") +
geom_line(aes(y=Greater.Mondawmin), color = "pink") +
labs(
title = "The Median Household Income of the Three Whitest Neighborhoods in 2020",
x = "Year",
Y = "Average Median Household Income",
caption = "Source: Baltimore Data")
Pct_Top_three <- (read.csv("Top_Three_Data - Sheet1.csv"))
ggplot(Pct_Top_three, aes(x=Year))+
geom_line(aes(y=Fells.Point), color = "blue") +
geom_line(aes(y=South.Baltimore), color = "orange") +
geom_line(aes(y=Medfield.Hampden.Woodberry.Remington), color = "purple") +
geom_line(aes(y=Sandtown.Winchester.Harlem.Park), color = "yellow") +
geom_line(aes(y=Edmondson.Village), color = "red") +
geom_line(aes(y=Greater.Mondawmin), color = "pink") +
labs(
title = "The Median Household Income of the Three Whitest Neighborhoods in 2020",
x = "Year",
Y = "Average Median Household Income",
caption = "Source: Baltimore Data")
Pct_Top_three <- (read.csv("Top_Three_Data - Sheet1.csv"))
ggplot(Pct_Top_three, aes(x=Year))+
geom_line(aes(y=Fells.Point), color = "blue") +
geom_line(aes(y=South.Baltimore), color = "orange") +
geom_line(aes(y=Medfield.Hampden.Woodberry.Remington), color = "purple") +
geom_line(aes(y=Sandtown.Winchester.Harlem.Park), color = "yellow") +
geom_line(aes(y=Edmondson.Village), color = "red") +
geom_line(aes(y=Greater.Mondawmin), color = "pink") +
labs(
title = "The Median Household Income of the Three Neighborhoods with the Highest Percentage of White and Black Residents in 2020",
x = "Year",
Y = "Average Median Household Income",
caption = "Source: Baltimore Data")
pct_change <-Balt_race %>%
select(geoid, x2010_total, x2020_total) %>%
mutate(percent_change = (x2020_total-x2010_total/x2010_total)) %>%
slice_max(percent_change, n=3)
change <-Balt_income
filter(change,GEOID=="24510151100"| GEOID=="24510260302"|GEOID=="24510271200")
View(pct_change)
Upton_Druid_Heights <- (read.csv("Upton_Druid_Heights_Data - Sheet1.csv"))
Upton_Druid_Heights %>%
group_by(X2020_race) %>%
arrange(desc(count)) %>%
ggplot(aes(x=X2020_race, y=count, weight=count, fill = count))+
geom_col() +
labs(title = "Upton/Druid Heights Racial Breakdown in 2020",
subtitle = "Baltimore Data, 2020",
y="Count",
x="Race")
Pct_Top_three <- (read.csv("Top_Three_Data - Sheet1.csv"))
ggplot(Pct_Top_three, aes(x=Year))+
geom_line(aes(y=Fells.Point), color = "blue") +
geom_line(aes(y=South.Baltimore), color = "orange") +
geom_line(aes(y=Medfield.Hampden.Woodberry.Remington), color = "purple") +
geom_line(aes(y=Sandtown.Winchester.Harlem.Park), color = "yellow") +
geom_line(aes(y=Edmondson.Village), color = "red") +
geom_line(aes(y=Greater.Mondawmin), color = "pink") +
labs(
title = "The Median Household Income of the Three Neighborhoods with the Highest Percentage of White and Black Residents in 2020",
x = "Year",
Y = "Average Median Household Income",
caption = "Source: Baltimore Data")
options(scipen=999)
library(tidyverse)
library(janitor)
library(rvest)
library(ggplot2)
library(dplyr)
Balt_race <- (read.csv("baltcity_race_8_13.csv"))
Balt_income <- (read.csv("baltcity_income_clean.csv"))
Upton_Druid_Heights <- (read.csv("Upton_Druid_Heights_Data - Sheet1.csv"))
income <-Balt_income
income %>%
ggplot(aes(x = Neighborhood, y = x2020, fill = x2020)) +
geom_bar(stat = "identity") +
labs(title = "Average Median Income",
caption = "Data from Baltimore City Income",
y="Average Median Income",
x="Neighborhoods")
summary(income)
poorest<-Balt_income %>%
inner_join(Balt_race, by=c("GEOID"="geoid")) %>%
slice_min(x2020, n=1)
Upton_Druid_Heights <- (read.csv("Upton_Druid_Heights_Data - Sheet1.csv"))
Upton_Druid_Heights %>%
group_by(X2020_race) %>%
arrange(desc(count)) %>%
ggplot(aes(x=X2020_race, y=count, weight=count, fill = count))+
geom_col() +
labs(title = "Upton/Druid Heights Racial Breakdown in 2020",
subtitle = "Baltimore Data, 2020",
y="Count",
x="Race")
pct_black <-Balt_race %>%
inner_join(Balt_income, by=c("geoid"="GEOID")) %>%
select(geoid, x2010_total, x2010_black, x2020_black, x2020_total, Neighborhood, x2010, x2016, x2020) %>%
mutate(percent_x2020_black = ((x2020_black/x2020_total)*100),
percent_x2010_black = ((x2010_black/x2010_total)*100)) %>%
slice_max(percent_x2020_black, n=3)
pct_white <-Balt_race %>%
inner_join(Balt_income, by=c("geoid"="GEOID")) %>%
select(geoid, x2010_total, x2010_white, x2020_white, x2020_total, Neighborhood, x2010, x2016, x2020) %>%
mutate(percent_x2020_white = ((x2020_white/x2020_total)*100),
percent_x2010_white = ((x2010_white/x2010_total)*100)) %>%
slice_max(percent_x2020_white, n=3)
Pct_Top_three <- (read.csv("Top_Three_Data - Sheet1.csv"))
ggplot(Pct_Top_three, aes(x=Year))+
geom_line(aes(y=Fells.Point), color = "blue") +
geom_line(aes(y=South.Baltimore), color = "orange") +
geom_line(aes(y=Medfield.Hampden.Woodberry.Remington), color = "purple") +
geom_line(aes(y=Sandtown.Winchester.Harlem.Park), color = "yellow") +
geom_line(aes(y=Edmondson.Village), color = "red") +
geom_line(aes(y=Greater.Mondawmin), color = "pink") +
labs(
title = "The Median Household Income of the Three Neighborhoods with the Highest Percentage of White and Black Residents in 2020",
x = "Year",
Y = "Average Median Household Income",
caption = "Source: Baltimore Data")
pct_change <-Balt_race %>%
select(geoid, x2010_total, x2020_total) %>%
mutate(percent_change = (x2020_total-x2010_total/x2010_total)) %>%
slice_max(percent_change, n=3)
change <-Balt_income
filter(change,GEOID=="24510151100"| GEOID=="24510260302"|GEOID=="24510271200")
View(Balt_income)
View(Balt_race)
# Remove scientific notation
options(scipen=999)
# Load the tidyverse
library(tidyverse)
state_population_dirty <- read_rds("assets/data/state_population_dirty.rds")
glimpse(state_population_dirty)
state_population_dirty %>%
filter(year == 2020) %>%
arrange(desc(total_pop))
glimpse(state_population_dirty)
state_population_dirty <- state_population_dirty %>%
mutate(total_pop = as.numeric(total_pop))
glimpse(state_population_dirty)
state_population_dirty %>%
filter(year == 2020) %>%
arrange(desc(total_pop))
state_population_dirty %>%
filter(year == 2020) %>%
summarise(
total_us_black_alone_population = sum(black_alone_pop)
)
state_population_dirty
state_population_dirty %>%
filter(year == 2020) %>%
summarise(
total_us_black_alone_population = sum(black_alone_pop, na.rm=TRUE)
)
state_population_dirty <- state_population_dirty %>%
mutate(black_alone_pop = case_when(
state == "Alabama" & year == 2020 ~ 1301319,
TRUE ~ black_alone_pop
))
state_population_dirty
state_population_dirty %>%
filter(year == 2020) %>%
summarise(
total_us_black_alone_population = sum(black_alone_pop)
)
state_population_dirty %>%
filter(state == "Maryland") %>%
summarise(
mean_white_alone_pop = mean(white_alone_pop)
)
state_population_dirty %>%
filter(state == "Maryland") %>%
select(year)
state_population_dirty %>%
filter(state == "Maryland") %>%
select(state,year,white_alone_pop) %>%
add_row(
state = "Maryland",
year = 2019,
white_alone_pop = 3343003
)
state_population_dirty %>%
filter(state == "Maryland") %>%
select(state,year,white_alone_pop) %>%
add_row(
state = "Maryland",
year = 2019,
white_alone_pop = 3343003
) %>%
summarise(
mean_white_alone_pop = mean(white_alone_pop)
)
library(tidyverse)
SF <- read_csv("SF_311.csv")
View(SF)
#This cleans column names
SF <- janitor::clean_names(SF)
#This processes dates for analysis
SF$call_date2 <- as.Date(SF$call_date)
SF$call_date2 <- lubridate::mdy(SF$call_date)
#This creates a new column for year
SF$year <- lubridate::year(SF$call_date2)
View(SF)
SF$call_date2 <- as.Date(SF$call_date)
SF$call_date2 <- lubridate::mdy(SF$call_date)
View(SF)
# Turn off scientific notation
options(scipen=999)
library(tidyverse)
library(janitor)
library(rio)
library(dplyr)
library(readr)
library(rvest)
homicides <- read.csv("homicide-data.csv") %>%
as.data.frame() %>%
clean_names()
install.packages(lubridate)
library(lubridate)
date_string <- "20100504"
parsed_date <- ymd(date_string)
year_only <- year(parsed_date)
homicides <- homicides %>%
mutate(year = year(ymd(reported_date)))
balt_homicides <- homicides %>%
filter(city == "Baltimore")
balt_homicides151617 <- balt_homicides %>%
mutate(row = row_number()) %>%
filter(year >= 2015)
#1002 reported homicides in 2015, 2016 and 2017. 2015 and 2017 had 365 days and 2016 had 366 days. This is 1096 days.
#1002 homicides divided by 1096 days is about .914, which is about 1 homicide per day over those three years.
#Note to Prof Wells - please let us know if there is a different way that you would want us to filter for year. We were unsure how to split up the text, so we found the row with the earliest 2015 homicide and filtered for all subsequent homicides through assigning numbers to rows.
balt_hom_yr <- balt_homicides %>%
count(disposition, year) %>%
group_by(disposition, year) %>%
filter(disposition == "Closed by arrest")
balt_hom_yr %>%
ggplot(aes(x=year, y=n, weight=n, fill=n))+
geom_col()
#This graph shows that arrests for homicides went down.
#Although we do not exactly agree that they plumpted.
balt_homicides2014 <- balt_homicides %>%
filter(year == "2014") %>%
count(disposition) %>%
group_by(disposition)
sum(balt_homicides2014$n)
#The total amount of homicides in 2014 in Baltimore was 211. There were 86 arrests. 86 divded by 211 is .407 which is about 41%
balt_homicides2017 <- balt_homicides %>%
filter(year == "2017") %>%
count(disposition) %>%
group_by(disposition)
sum(balt_homicides2017$n)
#The total amount of homicides in 2014 in Baltimore was 340. There were 93 arrests. 93 divided by 340 is .27 which is 27%.
#41% compared to 27% is indeed a 14% drop.
