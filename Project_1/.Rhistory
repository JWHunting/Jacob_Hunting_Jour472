poorest<-Balt_income %>%
inner_join(Balt_race, by=c("GEOID"="geoid")) %>%
slice_min(x2020, n=1)
poorest_racial<- poorest %>%
ggplot() +
geom_bar(aes(x=x_2020_total, weight=n))
View(poorest_racial)
ADS1 <- read_csv("ncaa_athletic_dirs.csv")
NCAA21 <- ADS1 %>%
filter(year == "2021")
NCAA21 %>%
group_by(race_sex) %>%
arrange(desc(count)) %>%
ggplot(aes(x=race_sex, y=count, weight=count, fill = count))+
geom_col() +
labs(title = "Athletic Directors by Race and Sex",
subtitle = "NCAA Data, 2021",
y="Count",
x="Race/Gender")
View(NCAA21)
poorest<-Balt_income %>%
filter(x2020)
View(poorest)
poorest<-Balt_income %>%
inner_join(Balt_race, by=c("GEOID"="geoid")) %>%
select(Neighborhood, GEOID, x2020_total, x2020_white, x2020_black, x2020_native_am, x2020_hispanic, x2020_asian, x2020_pac_islander)
slice_min(x2020, n=1)
poorest<-Balt_income %>%
inner_join(Balt_race, by=c("GEOID"="geoid")) %>%
select(Neighborhood, GEOID, x2020_total, x2020_white, x2020_black, x2020_native_am, x2020_hispanic, x2020_asian, x2020_pac_islander, x2020)
slice_min(x2020, n=1)
poorest<-Balt_income %>%
inner_join(Balt_race, by=c("GEOID"="geoid")) %>%
slice_min(x2020, n=1)
pct_black <-Balt_race %>%
select(geoid, x2010_total, x2010_black, x2020_black, x2020_total) %>%
mutate(percent_x2020_black = ((x2020_black/x2020_total)*100),
percent_x2010_black = ((x2010_black/x2010_total)*100)) %>%
slice_max(percent_x2020_black, n=3)
pct_white <-Balt_race %>%
select(geoid, x2010_total, x2010_white, x2020_white, x2020_total) %>%
mutate(percent_x2020_white = ((x2020_white/x2020_total)*100),
percent_x2010_white = ((x2010_white/x2010_total)*100)) %>%
slice_max(percent_x2020_white, n=3)
View(pct_black)
income <-Balt_income
income %>%
ggplot(aes(x = GEOID, y = x2020, fill = x2020)) +
geom_bar(stat = "identity") +
labs(title = "Average Median Income",
caption = "Data from Baltimore City Income",
y="Average Median Income",
x="GEOID")
income <-Balt_income
income %>%
ggplot(aes(x = Neighborhood, y = x2020, fill = x2020)) +
geom_bar(stat = "identity") +
labs(title = "Average Median Income",
caption = "Data from Baltimore City Income",
y="Average Median Income",
x="GEOID")
income <-Balt_income
income %>%
ggplot(aes(x = Neighborhood, y = x2020, fill = x2020)) +
geom_bar(stat = "identity") +
labs(title = "Average Median Income",
caption = "Data from Baltimore City Income",
y="Average Median Income",
x="Neighborhoods")
income <-Balt_income
income %>%
ggplot(aes(x = GEOID, y = x2020, fill = x2020)) +
geom_bar(stat = "identity") +
labs(title = "Average Median Income",
caption = "Data from Baltimore City Income",
y="Average Median Income",
x="Neighborhoods")
income <-Balt_income
income %>%
ggplot(aes(x = Neighborhood, y = x2020, fill = x2020)) +
geom_bar(stat = "identity") +
labs(title = "Average Median Income",
caption = "Data from Baltimore City Income",
y="Average Median Income",
x="Neighborhoods")
income <-Balt_income
income %>%
ggplot(aes(x = Neighborhood, y = x2020, fill = x2020)) +
geom_bar(stat = "identity") +
labs(title = "Average Median Income",
caption = "Data from Baltimore City Income",
y="Average Median Income",
x="Neighborhoods")
summary(income)
poorest<-Balt_income %>%
inner_join(Balt_race, by=c("GEOID"="geoid")) %>%
slice_min(x2020, n=1)
View(poorest)
poorest<-Balt_income %>%
inner_join(Balt_race, by=c("GEOID"="geoid")) %>%
slice_min(x2020, n=1)
summary(poorest)
poorest<-Balt_income %>%
inner_join(Balt_race, by=c("GEOID"="geoid")) %>%
slice_min(x2020, n=1)
Upton/Druid_Heights <- poorest %>%
filter(x2020, GEOID)
poorest<-Balt_income %>%
inner_join(Balt_race, by=c("GEOID"="geoid")) %>%
slice_min(x2020, n=1)
Upton/Druid_Heights <- poorest %>%
filter("x2020", "GEOID")
poorest<-Balt_income %>%
inner_join(Balt_race, by=c("GEOID"="geoid")) %>%
slice_min(x2020, n=1)
poorest<-Balt_income %>%
inner_join(Balt_race, by=c("GEOID"="geoid")) %>%
slice_min(x2020, n=1)
Upton/Druid_Heights <- poorest %>%
select(x2020, Neighborhood)
poorest<-Balt_income %>%
inner_join(Balt_race, by=c("GEOID"="geoid")) %>%
slice_min(x2020, n=1)
poorest %>%
select(x2020, Neighborhood)
poorest<-Balt_income %>%
inner_join(Balt_race, by=c("GEOID"="geoid")) %>%
slice_min(x2020, n=1)
poorest %>%
select(x2020, Neighborhood, x2020_total, x2020_white, x2020_black, x2020_native_am, x2020_asian, x2020_pac_islander, x2020_hispanic)
poorest<-Balt_income %>%
inner_join(Balt_race, by=c("GEOID"="geoid")) %>%
slice_min(x2020, n=1)
poorest %>%
select(x2020, Neighborhood, x2020_total, x2020_white, x2020_black, x2020_native_am, x2020_asian, x2020_pac_islander, x2020_hispanic) %>%
ggplot(aes(x = x2020, y = n, fill = n)) +
geom_bar(stat = "identity") +
labs(title = "Average Median Income",
caption = "Data from Baltimore City Income",
y="Average Median Income",
x="Neighborhoods")
poorest<-Balt_income %>%
inner_join(Balt_race, by=c("GEOID"="geoid")) %>%
slice_min(x2020, n=1)
poorest %>%
select(x2020, Neighborhood, x2020_total, x2020_white, x2020_black, x2020_native_am, x2020_asian, x2020_pac_islander, x2020_hispanic) %>%
ggplot(aes(x = x2020_total, y = n, fill = n)) +
geom_bar(stat = "identity") +
labs(title = "Average Median Income",
caption = "Data from Baltimore City Income",
y="Average Median Income",
x="Neighborhoods")
poorest<-Balt_income %>%
inner_join(Balt_race, by=c("GEOID"="geoid")) %>%
slice_min(x2020, n=1)
poorest %>%
select(Neighborhood, x2020_total, x2020_white, x2020_black, x2020_native_am, x2020_asian, x2020_pac_islander, x2020_hispanic) %>%
ggplot(aes(x = x2020_total, y = n, fill = n)) +
geom_bar(stat = "identity") +
labs(title = "Average Median Income",
caption = "Data from Baltimore City Income",
y="Average Median Income",
x="Neighborhoods")
Upton/Druid_Heights <- read.csv("Upton_Druid_Heights_Data - Sheet1.csv")
Upton/Druid_Heights <- (read.csv("Upton_Druid_Heights_Data - Sheet1.csv"))
Balt_race <- (read.csv("baltcity_race_8_13.csv"))
Balt_income <- (read.csv("baltcity_income_clean.csv"))
Upton/Druid_Heights <- (read.csv("Upton_Druid_Heights_Data - Sheet1.csv"))
Balt_race <- (read.csv("baltcity_race_8_13.csv"))
Balt_income <- (read.csv("baltcity_income_clean.csv"))
Upton_Druid_Heights <- (read.csv("Upton_Druid_Heights_Data - Sheet1.csv"))
Upton_Druid_Heights %>%
group_by(2020_race) %>%
Upton_Druid_Heights <- (read.csv("Upton_Druid_Heights_Data - Sheet1.csv"))
Upton_Druid_Heights %>%
group_by("2020_race") %>%
arrange(desc(count)) %>%
ggplot(aes(x="2020_race", y=count, weight=count, fill = count))+
geom_col() +
labs(title = "Athletic Directors by Race and Sex",
subtitle = "NCAA Data, 2021",
y="Count",
x="Race/Gender")
View(Upton_Druid_Heights)
Upton_Druid_Heights <- (read.csv("Upton_Druid_Heights_Data - Sheet1.csv"))
Upton_Druid_Heights %>%
group_by(X2020_race) %>%
arrange(desc(count)) %>%
ggplot(aes(x=X2020_race, y=count, weight=count, fill = count))+
geom_col() +
labs(title = "Athletic Directors by Race and Sex",
subtitle = "NCAA Data, 2021",
y="Count",
x="Race/Gender")
Upton_Druid_Heights <- (read.csv("Upton_Druid_Heights_Data - Sheet1.csv"))
Upton_Druid_Heights %>%
group_by(X2020_race) %>%
arrange(desc(count)) %>%
ggplot(aes(x=X2020_race, y=count, weight=count, fill = count))+
geom_col() +
labs(title = "Upton/Druid Heights Racial Breakdown in 2020",
subtitle = "Baltimore Data, 2020",
y="Count",
x="Race")
poorest<-Balt_income %>%
inner_join(Balt_race, by=c("GEOID"="geoid")) %>%
slice_min(x2020, n=1)
View(pct_black)
pct_black <-Balt_race %>%
inner_join(Balt_income, by=c("GEOID"="geoid")) %>%
select(geoid, x2010_total, x2010_black, x2020_black, x2020_total) %>%
mutate(percent_x2020_black = ((x2020_black/x2020_total)*100),
percent_x2010_black = ((x2010_black/x2010_total)*100)) %>%
slice_max(percent_x2020_black, n=3)
pct_black <-Balt_race %>%
inner_join(Balt_income, by=c("geoid"="GEOID")) %>%
select(geoid, x2010_total, x2010_black, x2020_black, x2020_total) %>%
mutate(percent_x2020_black = ((x2020_black/x2020_total)*100),
percent_x2010_black = ((x2010_black/x2010_total)*100)) %>%
slice_max(percent_x2020_black, n=3)
pct_white <-Balt_race %>%
inner_join(Balt_income, by=c("geoid"="GEOID")) %>%
select(geoid, x2010_total, x2010_white, x2020_white, x2020_total) %>%
mutate(percent_x2020_white = ((x2020_white/x2020_total)*100),
percent_x2010_white = ((x2010_white/x2010_total)*100)) %>%
slice_max(percent_x2020_white, n=3)
View(pct_black)
pct_black <-Balt_race %>%
inner_join(Balt_income, by=c("geoid"="GEOID")) %>%
select(geoid, x2010_total, x2010_black, x2020_black, x2020_total, Neighborhood) %>%
mutate(percent_x2020_black = ((x2020_black/x2020_total)*100),
percent_x2010_black = ((x2010_black/x2010_total)*100)) %>%
slice_max(percent_x2020_black, n=3)
pct_white <-Balt_race %>%
inner_join(Balt_income, by=c("geoid"="GEOID")) %>%
select(geoid, x2010_total, x2010_white, x2020_white, x2020_total) %>%
mutate(percent_x2020_white = ((x2020_white/x2020_total)*100),
percent_x2010_white = ((x2010_white/x2010_total)*100)) %>%
slice_max(percent_x2020_white, n=3)
View(pct_black)
pct_black <-Balt_race %>%
inner_join(Balt_income, by=c("geoid"="GEOID")) %>%
select(geoid, x2010_total, x2010_black, x2020_black, x2020_total, Neighborhood) %>%
mutate(percent_x2020_black = ((x2020_black/x2020_total)*100),
percent_x2010_black = ((x2010_black/x2010_total)*100)) %>%
slice_max(percent_x2020_black, n=3)
pct_white <-Balt_race %>%
inner_join(Balt_income, by=c("geoid"="GEOID")) %>%
select(geoid, x2010_total, x2010_white, x2020_white, x2020_total, Neighborhood) %>%
mutate(percent_x2020_white = ((x2020_white/x2020_total)*100),
percent_x2010_white = ((x2010_white/x2010_total)*100)) %>%
slice_max(percent_x2020_white, n=3)
View(Balt_income)
pct_black <-Balt_race %>%
inner_join(Balt_income, by=c("geoid"="GEOID")) %>%
select(geoid, x2010_total, x2010_black, x2020_black, x2020_total, Neighborhood, x2010, x2016, x2020) %>%
mutate(percent_x2020_black = ((x2020_black/x2020_total)*100),
percent_x2010_black = ((x2010_black/x2010_total)*100)) %>%
slice_max(percent_x2020_black, n=3)
pct_white <-Balt_race %>%
inner_join(Balt_income, by=c("geoid"="GEOID")) %>%
select(geoid, x2010_total, x2010_white, x2020_white, x2020_total, Neighborhood) %>%
mutate(percent_x2020_white = ((x2020_white/x2020_total)*100),
percent_x2010_white = ((x2010_white/x2010_total)*100)) %>%
slice_max(percent_x2020_white, n=3)
View(pct_black)
pct_black <-Balt_race %>%
inner_join(Balt_income, by=c("geoid"="GEOID")) %>%
select(geoid, x2010_total, x2010_black, x2020_black, x2020_total, Neighborhood, x2010, x2016, x2020) %>%
mutate(percent_x2020_black = ((x2020_black/x2020_total)*100),
percent_x2010_black = ((x2010_black/x2010_total)*100)) %>%
slice_max(percent_x2020_black, n=3)
pct_white <-Balt_race %>%
inner_join(Balt_income, by=c("geoid"="GEOID")) %>%
select(geoid, x2010_total, x2010_white, x2020_white, x2020_total, Neighborhood, x2010, x2016, x2020) %>%
mutate(percent_x2020_white = ((x2020_white/x2020_total)*100),
percent_x2010_white = ((x2010_white/x2010_total)*100)) %>%
slice_max(percent_x2020_white, n=3)
ads2 <- read_csv("Sports_Race_ADs.csv", skip =1)
ads2 <- clean_names(ads2)
ggplot(ads2, aes(x=year))+
geom_line(aes(y=male_white), color = "blue") +
geom_line(aes(y=male_black), color = "orange") +
geom_line(aes(y=male_other), color = "purple") +
geom_line(aes(y=female_white), color = "yellow") +
geom_line(aes(y=female_black), color = "red") +
geom_line(aes(y=female_other), color = "pink") +
labs(
title = "NCAA Athletic Directors by Race and Sex from 2015-2021",
x = "Year",
Y = "Count by Race and Sex",
caption = "Source: NCAA")
View(ads2)
View(pct_white)
Pct_White_Top_three <- (read.csv("Pct_White_Data - Sheet1.csv"))
pct_white %>%
ggplot(pct_white, aes(x=year))+
geom_line(aes(y=Fells Point), color = "blue") +
Pct_White_Top_three <- (read.csv("Pct_White_Data - Sheet1.csv"))
pct_white %>%
ggplot(pct_white, aes(x=year))+
geom_line(aes(y="Fells Point"), color = "blue") +
geom_line(aes(y="South Baltimore"), color = "orange") +
geom_line(aes(y="Medfield/Hampden/Woodberry/Remington"), color = "purple")
Pct_White_Top_three <- (read.csv("Pct_White_Data - Sheet1.csv", skip = 1))
pct_white %>%
ggplot(pct_white, aes(x=year))+
geom_line(aes(y="Fells Point"), color = "blue") +
geom_line(aes(y="South Baltimore"), color = "orange") +
geom_line(aes(y="Medfield/Hampden/Woodberry/Remington"), color = "purple")
Pct_White_Top_three <- (read.csv("Pct_White_Data - Sheet1.csv", skip = 1))
ggplot(Pct_White_Top_three, aes(x=year))+
geom_line(aes(y="Fells Point"), color = "blue") +
geom_line(aes(y="South Baltimore"), color = "orange") +
geom_line(aes(y="Medfield/Hampden/Woodberry/Remington"), color = "purple")
Pct_White_Top_three <- (read.csv("Pct_White_Data - Sheet1.csv", skip = 1))
ggplot(Pct_White_Top_three, aes(x=year))+
geom_line(aes(y="Fells Point"), color = "blue") +
geom_line(aes(y="South Baltimore"), color = "orange") +
geom_line(aes(y="Medfield/Hampden/Woodberry/Remington"), color = "purple") +
labs(
title = "NCAA Athletic Directors by Race and Sex from 2015-2021",
x = "Year",
Y = "Count by Race and Sex",
caption = "Source: NCAA")
Pct_White_Top_three <- (read.csv("Pct_White_Data - Sheet1.csv", skip = 1))
ggplot(Pct_White_Top_three, aes(x=year))+
geom_line(aes(y=Fells Point), color = "blue") +
Pct_White_Top_three <- (read.csv("Pct_White_Data - Sheet1.csv", skip = 1))
ggplot(Pct_White_Top_three, aes(x=year))+
geom_line(aes("y=Fells Point"), color = "blue") +
geom_line(aes("y=South Baltimore"), color = "orange") +
geom_line(aes("y=Medfield/Hampden/Woodberry/Remington"), color = "purple") +
labs(
title = "NCAA Athletic Directors by Race and Sex from 2015-2021",
x = "Year",
Y = "Count by Race and Sex",
caption = "Source: NCAA")
Pct_White_Top_three <- (read.csv("Pct_White_Data - Sheet1.csv", skip = 1))
ggplot(Pct_White_Top_three, aes(x=year))+
geom_line(aes("y=Fells Point"), color = "blue") +
geom_line(aes("y=South Baltimore"), color = "orange") +
geom_line(aes("y=Medfield/Hampden/Woodberry/Remington"), color = "purple") +
labs(
title = "NCAA Athletic Directors by Race and Sex from 2015-2021",
x = "Year",
Y = "Count by Race and Sex",
caption = "Source: NCAA")
View(Pct_White_Top_three)
Pct_White_Top_three <- (read.csv("Pct_White_Data - Sheet1.csv", skip = 1))
View(Pct_White_Top_three)
Pct_White_Top_three <- (read.csv("Pct_White_Data - Sheet1.csv"))
View(Pct_White_Top_three)
Pct_White_Top_three <- (read.csv("Pct_White_Data - Sheet1.csv"))
ggplot(Pct_White_Top_three, aes(x=year))+
geom_line(aes("y=Fells.Point"), color = "blue") +
geom_line(aes("y=South.Baltimore"), color = "orange") +
geom_line(aes("y=Medfield.Hampden.Woodberry.Remington"), color = "purple") +
labs(
title = "NCAA Athletic Directors by Race and Sex from 2015-2021",
x = "Year",
Y = "Count by Race and Sex",
caption = "Source: NCAA")
Pct_White_Top_three <- (read.csv("Pct_White_Data - Sheet1.csv"))
ggplot(Pct_White_Top_three, aes(x=year))+
geom_line(aes(y=Fells.Point), color = "blue") +
geom_line(aes(y=South.Baltimore), color = "orange") +
geom_line(aes(y=Medfield.Hampden.Woodberry.Remington), color = "purple") +
labs(
title = "NCAA Athletic Directors by Race and Sex from 2015-2021",
x = "Year",
Y = "Count by Race and Sex",
caption = "Source: NCAA")
Pct_White_Top_three <- (read.csv("Pct_White_Data - Sheet1.csv"))
ggplot(Pct_White_Top_three, aes(x=year))+
geom_line(aes(y=Fells.Point), color = "blue") +
geom_line(aes(y=South.Baltimore), color = "orange") +
geom_line(aes(y=Medfield.Hampden.Woodberry.Remington), color = "purple") +
labs(
title = "NCAA Athletic Directors by Race and Sex from 2015-2021",
x = "Year",
Y = "Count by Race and Sex",
caption = "Source: NCAA")
ggplot(Pct_White_Top_three, aes(x=year))+
ggplot(ads2, aes(x=year))+
geom_line(aes(y=male_white), color = "blue") +
ads2 <- read_csv("Sports_Race_ADs.csv", skip =1)
Pct_White_Top_three <- (read.csv("Pct_White_Data - Sheet1.csv"))
ggplot(Pct_White_Top_three, aes(x=year))+
geom_line(aes(y=Fells.Point), color = "blue") +
geom_line(aes(y=South.Baltimore), color = "orange") +
geom_line(aes(y=Medfield.Hampden.Woodberry.Remington), color = "purple") +
labs(
title = "NCAA Athletic Directors by Race and Sex from 2015-2021",
x = "Year",
Y = "Count by Race and Sex",
caption = "Source: NCAA")
Pct_White_Top_three <- (read.csv("Pct_White_Data - Sheet1.csv"))
ggplot(Pct_White_Top_three, aes(x=Year))+
geom_line(aes(y=Fells.Point), color = "blue") +
geom_line(aes(y=South.Baltimore), color = "orange") +
geom_line(aes(y=Medfield.Hampden.Woodberry.Remington), color = "purple") +
labs(
title = "NCAA Athletic Directors by Race and Sex from 2015-2021",
x = "Year",
Y = "Count by Race and Sex",
caption = "Source: NCAA")
ads2 <- read_csv("Sports_Race_ADs.csv", skip =1)
ads2 <- clean_names(ads2)
ggplot(ads2, aes(x=year))+
geom_line(aes(y=male_white), color = "blue") +
geom_line(aes(y=male_black), color = "orange") +
geom_line(aes(y=male_other), color = "purple") +
geom_line(aes(y=female_white), color = "yellow") +
geom_line(aes(y=female_black), color = "red") +
geom_line(aes(y=female_other), color = "pink") +
labs(
title = "NCAA Athletic Directors by Race and Sex from 2015-2021",
x = "Year",
Y = "Count by Race and Sex",
caption = "Source: NCAA")
Pct_White_Top_three <- (read.csv("Pct_White_Data - Sheet1.csv"))
ggplot(Pct_White_Top_three, aes(x=Year))+
geom_line(aes(y=Fells.Point), color = "blue") +
geom_line(aes(y=South.Baltimore), color = "orange") +
geom_line(aes(y=Medfield.Hampden.Woodberry.Remington), color = "purple") +
labs(
title = "NCAA Athletic Directors by Race and Sex from 2015-2021",
x = "Year",
Y = "Average Median Household Income",
caption = "Source: NCAA")
Pct_White_Top_three <- (read.csv("Pct_White_Data - Sheet1.csv"))
ggplot(Pct_White_Top_three, aes(x=Year))+
geom_line(aes(y=Fells.Point), color = "blue") +
geom_line(aes(y=South.Baltimore), color = "orange") +
geom_line(aes(y=Medfield.Hampden.Woodberry.Remington), color = "purple") +
labs(
title = "The Median Household Income of the Three Whitest Neighborhoods in 2020",
x = "Year",
Y = "Average Median Household Income",
caption = "Source: Baltimore Data")
Pct_Top_three <- (read.csv("Top_Three_Data - Sheet1.csv"))
View(Pct_Top_three)
Pct_Top_three <- (read.csv("Top_Three_Data - Sheet1.csv"))
ggplot(Pct_White_Top_three, aes(x=Year))+
geom_line(aes(y=Fells.Point), color = "blue") +
geom_line(aes(y=South.Baltimore), color = "orange") +
geom_line(aes(y=Medfield.Hampden.Woodberry.Remington), color = "purple") +
geom_line(aes(y=Sandtown.Winchester.Harlem.Park), color = "yellow") +
geom_line(aes(y=Edmondson.Village), color = "red") +
geom_line(aes(y=Greater.Mondawmin), color = "pink") +
labs(
title = "The Median Household Income of the Three Whitest Neighborhoods in 2020",
x = "Year",
Y = "Average Median Household Income",
caption = "Source: Baltimore Data")
Pct_Top_three <- (read.csv("Top_Three_Data - Sheet1.csv"))
ggplot(Pct_Top_three, aes(x=Year))+
geom_line(aes(y=Fells.Point), color = "blue") +
geom_line(aes(y=South.Baltimore), color = "orange") +
geom_line(aes(y=Medfield.Hampden.Woodberry.Remington), color = "purple") +
geom_line(aes(y=Sandtown.Winchester.Harlem.Park), color = "yellow") +
geom_line(aes(y=Edmondson.Village), color = "red") +
geom_line(aes(y=Greater.Mondawmin), color = "pink") +
labs(
title = "The Median Household Income of the Three Whitest Neighborhoods in 2020",
x = "Year",
Y = "Average Median Household Income",
caption = "Source: Baltimore Data")
Pct_Top_three <- (read.csv("Top_Three_Data - Sheet1.csv"))
ggplot(Pct_Top_three, aes(x=Year))+
geom_line(aes(y=Fells.Point), color = "blue") +
geom_line(aes(y=South.Baltimore), color = "orange") +
geom_line(aes(y=Medfield.Hampden.Woodberry.Remington), color = "purple") +
geom_line(aes(y=Sandtown.Winchester.Harlem.Park), color = "yellow") +
geom_line(aes(y=Edmondson.Village), color = "red") +
geom_line(aes(y=Greater.Mondawmin), color = "pink") +
labs(
title = "The Median Household Income of the Three Neighborhoods with the Highest Percentage of White and Black Residents in 2020",
x = "Year",
Y = "Average Median Household Income",
caption = "Source: Baltimore Data")
pct_change <-Balt_race %>%
select(geoid, x2010_total, x2020_total) %>%
mutate(percent_change = (x2020_total-x2010_total/x2010_total)) %>%
slice_max(percent_change, n=3)
change <-Balt_income
filter(change,GEOID=="24510151100"| GEOID=="24510260302"|GEOID=="24510271200")
View(pct_change)
Upton_Druid_Heights <- (read.csv("Upton_Druid_Heights_Data - Sheet1.csv"))
Upton_Druid_Heights %>%
group_by(X2020_race) %>%
arrange(desc(count)) %>%
ggplot(aes(x=X2020_race, y=count, weight=count, fill = count))+
geom_col() +
labs(title = "Upton/Druid Heights Racial Breakdown in 2020",
subtitle = "Baltimore Data, 2020",
y="Count",
x="Race")
Pct_Top_three <- (read.csv("Top_Three_Data - Sheet1.csv"))
ggplot(Pct_Top_three, aes(x=Year))+
geom_line(aes(y=Fells.Point), color = "blue") +
geom_line(aes(y=South.Baltimore), color = "orange") +
geom_line(aes(y=Medfield.Hampden.Woodberry.Remington), color = "purple") +
geom_line(aes(y=Sandtown.Winchester.Harlem.Park), color = "yellow") +
geom_line(aes(y=Edmondson.Village), color = "red") +
geom_line(aes(y=Greater.Mondawmin), color = "pink") +
labs(
title = "The Median Household Income of the Three Neighborhoods with the Highest Percentage of White and Black Residents in 2020",
x = "Year",
Y = "Average Median Household Income",
caption = "Source: Baltimore Data")
