library(tidyverse)
library(janitor)
###
# tidycensus
###
library(tidycensus)
census_api_key("4a5565f7bebc7cd034e85e374e1ddcc929798252", install=TRUE, overwrite=TRUE)
###
# Load ACS variables
###
acs_vars <- load_variables("acs5", year=2020)
###
# Get median household income for Maryland 2020
###
md <- get_acs(geography = "county",
variables = c(median_income = "B19013_001"),
state = "MD",
year = 2020)
asian_2020 <- get_acs(geography = "state",
variables = c(asian_divide = "B02001_005"),
year = 2020) %>%
rename(estimate_2020 = estimate)
asian_2010 <- get_acs(geography = "state",
variables = c(asian_divide = "B02001_005"),
year = 2010) %>%
rename(estimate_2010 = estimate)
View(asian_2010)
View(asian_2020)
asian<-asian_2010 %>%
inner_join(asian_2020, by=c("NAME"="NAME"))
View(asian)
asian<-asian_2010 %>%
inner_join(asian_2020, by=c("NAME")) %>%
asian<-asian_2010 %>%
inner_join(asian_2020, by=c("NAME" = "NAME")) %>%
asian<-asian_2010 %>%
inner_join(asian_2020, by=c("NAME"))
View(asian)
asian<-asian_2010 %>%
inner_join(asian_2020, by=c("GEOID", "NAME"))
View(asian)
asian<-asian_2010 %>%
inner_join(asian_2020, by=c("GEOID", "NAME")) %>%
select(GEOID, NAME, estimate_2010, estimate_2020)
View(asian)
asian<-asian_2010 %>%
inner_join(asian_2020, by=c("GEOID", "NAME")) %>%
select(GEOID, NAME, estimate_2010, estimate_2020) %>%
mutate(asian_change=((estimate_2020-estimate_2010)/estimate_2010)*100)
###
# Load ACS variables
###
acs_vars <- load_variables("acs5", year=2020)
###
# Get median household income for Maryland 2020
###
md <- get_acs(geography = "county",
variables = c(median_income = "B19013_001"),
state = "MD",
year = 2020)
# See vignette("pivot") for examples and explanation
# Generate column names from multiple variables
us_rent_income
us_rent_income %>%
pivot_wider(
names_from = variable,
values_from = c(estimate, moe)
)
# You can control whether `names_from` values vary fastest or slowest
# relative to the `values_from` column names using `names_vary`.
us_rent_income %>%
pivot_wider(
names_from = variable,
values_from = c(estimate, moe),
names_vary = "slowest"
)
#Calculate the males percentage of the total population
# male_population = "B01001_002"
# total_pop = "B01001_001"
male_2020 <- get_acs(geography = "state",
variables = c(male_divide = "B02001_005"),
year = 2020)
View(male_2020)
#Calculate the males percentage of the total population
# male_population = "B01001_002"
# total_pop = "B01001_001"
male_2020 <- get_acs(geography = "state",
variables = c(male_population= "B02001_005", total_population= "B01001_001"),year = 2020)
#Calculate the males percentage of the total population
# male_population = "B01001_002"
# total_pop = "B01001_001"
male_2020 <- get_acs(geography = "country",
variables = c(male_population= "B02001_005", total_population= "B01001_001"),year = 2020)
#Calculate the males percentage of the total population
# male_population = "B01001_002"
# total_pop = "B01001_001"
male_2020 <- get_acs(
variables = c(male_population= "B02001_005", total_population= "B01001_001"),year = 2020)
#Calculate the males percentage of the total population
# male_population = "B01001_002"
# total_pop = "B01001_001"
male_2020 <- get_acs(geography = "US"
variables = c(male_population= "B02001_005", total_population= "B01001_001"),year = 2020)
#Calculate the males percentage of the total population
# male_population = "B01001_002"
# total_pop = "B01001_001"
male_2020 <- get_acs(geography = "state"
variables = c(male_population= "B02001_005", total_population= "B01001_001"),year = 2020)
#Calculate the males percentage of the total population
# male_population = "B01001_002"
# total_pop = "B01001_001"
male_2020 <- get_acs(geography = "state",
variables = c(male_population= "B02001_005", total_population= "B01001_001"),year = 2020)
#Calculate the males percentage of the total population
# male_population = "B01001_002"
# total_pop = "B01001_001"
male_2020 <- get_acs(geography = "state",
variables = c(male_population= "B02001_005", total_population= "B01001_001"),year = 2020) %>%
#Calculate the males percentage of the total population
# male_population = "B01001_002"
# total_pop = "B01001_001"
male_2020 <- get_acs(geography = "state",
variables = c(male_population= "B02001_005", total_population= "B01001_001"),year = 2020) %>%
pivot_wider(
names_from = variable,
values_from = c(estimate, moe),
names_vary = "slowest"
)
View(male_2020)
#Calculate the males percentage of the total population
# male_population = "B01001_002"
# total_pop = "B01001_001"
male_2020 <- get_acs(geography = "state",
variables = c(male_population= "B02001_005", total_population= "B01001_001"),year = 2020) %>%
pivot_wider(
names_from = variable,
values_from = c(estimate, moe),
names_vary = "slowest") %>%
mutate(male_pct=(estimate_male_population/estimate_total_population))
#Calculate the males percentage of the total population
# male_population = "B01001_002"
# total_pop = "B01001_001"
male_2020 <- get_acs(geography = "state",
variables = c(male_population= "B02001_005", total_population= "B01001_001"),year = 2020) %>%
pivot_wider(
names_from = variable,
values_from = c(estimate, moe),
names_vary = "slowest") %>%
mutate(male_pct=(estimate_male_population/estimate_total_population)*100)
#Calculate the males percentage of the total population
# male_population = "B01001_002"
# total_pop = "B01001_001"
male_2020 <- get_acs(geography = "state",
variables = c(male_population= "B02001_005", total_population= "B01001_001"),year = 2020) %>%
pivot_wider(
names_from = variable,
values_from = c(estimate, moe),
names_vary = "slowest") %>%
mutate(male_pct=(estimate_male_population/estimate_total_population)*100)
View(male_2020)
#| output: false
library(rvest)
library(tidyverse)
library(janitor)
#| output: false
install.packages(rvest)
library(rvest)
library(tidyverse)
library(janitor)
#| output: false
install.packages("rvest")
library(rvest)
library(tidyverse)
library(janitor)
install.packages("rvest")
#| output: false
install.packages("rvest")
library(rvest)
library(tidyverse)
library(janitor)
knitr::include_graphics(rep("assets/images/rvest1.png"))
sboe_url <- "https://elections.maryland.gov/elections/2022/primary_results/gen_detail_results_2022_1_1_Republican.html"
knitr::include_graphics(rep("assets/images/rvest2.png"))
sboe_url <- "https://elections.maryland.gov/elections/2022/primary_results/gen_detail_results_2022_1_1_Republican.html"
# read in the html
results <- sboe_url %>%
read_html()
# display the html below
results
View(results)
knitr::include_graphics(rep("assets/images/rvest3.png"))
knitr::include_graphics(rep("assets/images/rvest4.png"))
# read in the html and extract all the tables
results <- sboe_url %>%
read_html() %>%
html_table()
# show the dataframe
results
# Read in all html from table, store all tables on page as nested list of dataframes.
results <- sboe_url %>%
read_html() %>%
html_table()
# Just keep the first dataframe in our list
results <- results[[1]]
# show the dataframe
results
View(results)
# Read in all html from table, get the HTML table.
results <- sboe_url %>%
read_html() %>%
html_table()
# Standardize column headers with rename()
# remove last row with slice()
# apply parse_number to columns 2,3,4 and 5.
results <- results[[1]] %>%
clean_names() %>%
rename(cox = 2, ficker = 3, schulz = 4, werner = 5) %>%
slice(-25) %>%
mutate(across(c(2:5), parse_number))
# show the dataframe
results
View(results)
